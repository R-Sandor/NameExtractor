version '1.0'

apply plugin: 'project-report'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'java-library-distribution'
apply plugin: 'checkstyle' // and/or pmd, jacoco, findbugs
apply plugin: 'org.hidetake.ssh'  // required for deploying reports to remote servers

buildscript {
	repositories {
  		mavenCentral()
    	jcenter()
  		ivy {
  			url 'https://secweb.cs.odu.edu/~zeil/ivyrepo'
  		}
	}
	dependencies {
 		 classpath 'org.hidetake:gradle-ssh-plugin:2.7.0+'
     	 classpath 'edu.odu.cs.zeil:report_accumulator:1.2'
	}
}
import edu.odu.cs.zeil.report_accumulator.ReportStats
import edu.odu.cs.zeil.report_accumulator.ReportsDeploy

mainClassName = "edu.odu.cs.cs350.namex.Main"

checkstyle {
  	  ignoreFailures true

	toolVersion "7.6.1"
	  configFile rootProject.file('./checkstyle.xml')
	
}

 task checkstyle(type: Checkstyle) {

  	  ignoreFailures true
        showViolations true
		
        source 'src'
        include '**/*.java'

        classpath = files()
    }

run { 	  	
	standardInput = System.in	
}

sourceCompatibility = 1.8

task wrapper(type: Wrapper) {
   gradleVersion = '4.6' //version required
}

htmlDependencyReport {
    projects = project.allprojects
    reports.html.destination = file("build/reports/project/dependencies")
  
    
}




repositories {
  	mavenCentral()
    jcenter()
  	ivy {
  		url 'https://secweb.cs.odu.edu/~zeil/ivyrepo'
  	}
 }

task myJavadocs(type: Javadoc) {
  source = sourceSets.main.allJava
}
 
task copyDocs (type: Copy) {
    from 'build/docs'
    into 'build/reports/docs'
    dependsOn 'javadoc'
}

task reports (dependsOn: ['htmlDependencyReport', 'javadoc', 'check', 
                          'copyWebPages', 'copyDocs']) {
    description 'Generate all reports for this project'
}


dependencies {
	compile 'com.github.fommil.netlib:all:1.1.2'	
	compile('nz.ac.waikato.cms.weka:weka-stable:3.8.2'){
 	exclude group: 'com.github.fommil.netlib', module: 'all'
  	}
 	compile 'edu.odu.cs.extract:extract-wordlists:4.2'
   testCompile 'junit:junit:4.12'
}

test {
	ignoreFailures = true
}


task train(type:JavaExec) {

   main = 'edu.odu.cs.cs350.namex.Trainer'
   classpath = sourceSets.main.runtimeClasspath
}

jar {
	dependsOn 'train'
	baseName = 'PNE'
	version = ''
    manifest {
        attributes 'Main-Class': 'edu.odu.cs.cs350.namex.Main'
    }
    
     from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
      
    }

}

def theBuildNumber = '';
if (project.hasProperty('buildNumber')) {
   theBuildNumber = project.buildNumber
   }

task collectStats (type: ReportStats, dependsOn: ['build', 'reports']) {
    reportsURL = 'http://www.cs.odu.edu/~rsandor/cs350/Blue2' + project.name + '/reports'
}

task deployReports (type: ReportsDeploy, dependsOn: 'collectStats') {
    deployDestination = 'rsync://rsandor@atria.cs.odu.edu:/home/rsandor/public_html/cs350/Blue2'
}


